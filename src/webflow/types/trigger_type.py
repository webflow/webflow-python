# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TriggerType(str, enum.Enum):
    """
    - `form_submission` - Sends the [form_submission](#form_submission) event
    - `site_publish` - Sends a [site_publish](#site_publish) event
    - `page_created` - Send the [page_created](#page_created) event
    - `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
    - `page_deleted` - Sends the [page_deleted](#page_deleted) event
    - `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
    - `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
    - `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
    - `user_account_added` - Sends the [user_account_added](#user_account_added) event
    - `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
    - `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
    - `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
    - `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
    - `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
    - `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
    """

    FORM_SUBMISSION = "form_submission"
    SITE_PUBLISH = "site_publish"
    PAGE_CREATED = "page_created"
    PAGE_METADATA_UPDATED = "page_metadata_updated"
    PAGE_DELETED = "page_deleted"
    ECOMM_NEW_ORDER = "ecomm_new_order"
    ECOMM_ORDER_CHANGED = "ecomm_order_changed"
    ECOMM_INVENTORY_CHANGED = "ecomm_inventory_changed"
    USER_ACCOUNT_ADDED = "user_account_added"
    USER_ACCOUNT_UPDATED = "user_account_updated"
    USER_ACCOUNT_DELETED = "user_account_deleted"
    COLLECTION_ITEM_CREATED = "collection_item_created"
    COLLECTION_ITEM_CHANGED = "collection_item_changed"
    COLLECTION_ITEM_DELETED = "collection_item_deleted"
    COLLECTION_ITEM_UNPUBLISHED = "collection_item_unpublished"

    def visit(
        self,
        form_submission: typing.Callable[[], T_Result],
        site_publish: typing.Callable[[], T_Result],
        page_created: typing.Callable[[], T_Result],
        page_metadata_updated: typing.Callable[[], T_Result],
        page_deleted: typing.Callable[[], T_Result],
        ecomm_new_order: typing.Callable[[], T_Result],
        ecomm_order_changed: typing.Callable[[], T_Result],
        ecomm_inventory_changed: typing.Callable[[], T_Result],
        user_account_added: typing.Callable[[], T_Result],
        user_account_updated: typing.Callable[[], T_Result],
        user_account_deleted: typing.Callable[[], T_Result],
        collection_item_created: typing.Callable[[], T_Result],
        collection_item_changed: typing.Callable[[], T_Result],
        collection_item_deleted: typing.Callable[[], T_Result],
        collection_item_unpublished: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TriggerType.FORM_SUBMISSION:
            return form_submission()
        if self is TriggerType.SITE_PUBLISH:
            return site_publish()
        if self is TriggerType.PAGE_CREATED:
            return page_created()
        if self is TriggerType.PAGE_METADATA_UPDATED:
            return page_metadata_updated()
        if self is TriggerType.PAGE_DELETED:
            return page_deleted()
        if self is TriggerType.ECOMM_NEW_ORDER:
            return ecomm_new_order()
        if self is TriggerType.ECOMM_ORDER_CHANGED:
            return ecomm_order_changed()
        if self is TriggerType.ECOMM_INVENTORY_CHANGED:
            return ecomm_inventory_changed()
        if self is TriggerType.USER_ACCOUNT_ADDED:
            return user_account_added()
        if self is TriggerType.USER_ACCOUNT_UPDATED:
            return user_account_updated()
        if self is TriggerType.USER_ACCOUNT_DELETED:
            return user_account_deleted()
        if self is TriggerType.COLLECTION_ITEM_CREATED:
            return collection_item_created()
        if self is TriggerType.COLLECTION_ITEM_CHANGED:
            return collection_item_changed()
        if self is TriggerType.COLLECTION_ITEM_DELETED:
            return collection_item_deleted()
        if self is TriggerType.COLLECTION_ITEM_UNPUBLISHED:
            return collection_item_unpublished()
