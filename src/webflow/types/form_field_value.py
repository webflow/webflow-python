# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .form_field_value_type import FormFieldValueType


class FormFieldValue(pydantic_v1.BaseModel):
    """
    An object containing field info for a specific fieldID.
    """

    display_name: typing.Optional[str] = pydantic_v1.Field(alias="displayName", default=None)
    """
    The field name displayed on the site
    """

    type: typing.Optional[FormFieldValueType] = pydantic_v1.Field(default=None)
    """
    The field type
    """

    placeholder: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The placeholder text for the field
    """

    user_visible: typing.Optional[bool] = pydantic_v1.Field(alias="userVisible", default=None)
    """
    Whether the field is visible to the user
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
