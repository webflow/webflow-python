# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class AssetVariant(pydantic_v1.BaseModel):
    hosted_url: typing.Optional[str] = pydantic_v1.Field(alias="hostedUrl", default=None)
    """
    URL of where the asset variant is hosted
    """

    original_file_name: typing.Optional[str] = pydantic_v1.Field(alias="originalFileName", default=None)
    """
    Original file name of the variant
    """

    display_name: typing.Optional[str] = pydantic_v1.Field(alias="displayName", default=None)
    """
    Display name of the variant
    """

    format: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    format of the variant
    """

    width: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Width in pixels
    """

    height: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Height in pixels
    """

    quality: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Value between 0 and 100 representing the image quality
    """

    error: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Any associated validation errors
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
