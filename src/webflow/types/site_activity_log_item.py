# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .site_activity_log_item_resource_operation import SiteActivityLogItemResourceOperation

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class SiteActivityLogItem(pydantic.BaseModel):
    id: typing.Optional[str]
    created_on: typing.Optional[dt.datetime] = pydantic.Field(alias="createdOn")
    last_updated: typing.Optional[dt.datetime] = pydantic.Field(alias="lastUpdated")
    event: typing.Optional[str]
    resource_operation: typing.Optional[SiteActivityLogItemResourceOperation] = pydantic.Field(
        alias="resourceOperation"
    )
    user: typing.Optional[str]
    resource_id: typing.Optional[str] = pydantic.Field(alias="resourceId")
    resource_name: typing.Optional[str] = pydantic.Field(alias="resourceName")
    new_value: typing.Optional[str] = pydantic.Field(alias="newValue")
    previous_value: typing.Optional[str] = pydantic.Field(alias="previousValue")
    payload: typing.Optional[typing.Dict[str, typing.Any]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
