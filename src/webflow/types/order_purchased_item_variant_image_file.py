# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .order_purchased_item_variant_image_file_variants_item import OrderPurchasedItemVariantImageFileVariantsItem


class OrderPurchasedItemVariantImageFile(pydantic_v1.BaseModel):
    size: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The image size in bytes
    """

    original_file_name: typing.Optional[str] = pydantic_v1.Field(alias="originalFileName", default=None)
    """
    the original name of the image
    """

    created_on: typing.Optional[dt.datetime] = pydantic_v1.Field(alias="createdOn", default=None)
    """
    The creation timestamp of the image
    """

    content_type: typing.Optional[str] = pydantic_v1.Field(alias="contentType", default=None)
    """
    The MIME type of the image
    """

    width: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The image width in pixels
    """

    height: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The image height in pixels
    """

    variants: typing.Optional[typing.List[OrderPurchasedItemVariantImageFileVariantsItem]] = pydantic_v1.Field(
        default=None
    )
    """
    Variants of the supplied image
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
