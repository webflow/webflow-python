# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .order_purchased_item_variant_image_file_variants_item import OrderPurchasedItemVariantImageFileVariantsItem

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class OrderPurchasedItemVariantImageFile(pydantic.BaseModel):
    size: typing.Optional[float] = pydantic.Field(description="The image size in bytes")
    original_file_name: typing.Optional[str] = pydantic.Field(
        alias="originalFileName", description="the original name of the image"
    )
    created_on: typing.Optional[dt.datetime] = pydantic.Field(
        alias="createdOn", description="The creation timestamp of the image"
    )
    content_type: typing.Optional[str] = pydantic.Field(alias="contentType", description="The MIME type of the image")
    width: typing.Optional[int] = pydantic.Field(description="The image width in pixels")
    height: typing.Optional[int] = pydantic.Field(description="The image height in pixels")
    variants: typing.Optional[typing.List[OrderPurchasedItemVariantImageFileVariantsItem]] = pydantic.Field(
        description="Variants of the supplied image"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
