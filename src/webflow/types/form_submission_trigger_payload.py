# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class FormSubmissionTriggerPayload(pydantic.BaseModel):
    """
    The payload of data sent from Webflow
    """

    name: typing.Optional[str] = pydantic.Field(description="The name of the form")
    site_id: typing.Optional[str] = pydantic.Field(
        alias="siteId", description="The id of the site that the form was submitted from"
    )
    data: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(description="The data submitted in the form")
    submitted_at: typing.Optional[str] = pydantic.Field(
        alias="submittedAt", description="The timestamp the form was submitted"
    )
    form_id: typing.Optional[str] = pydantic.Field(alias="formId", description="The id of the form submission")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
