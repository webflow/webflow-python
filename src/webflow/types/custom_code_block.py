# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .custom_code_block_type import CustomCodeBlockType
from .scripts import Scripts


class CustomCodeBlock(pydantic_v1.BaseModel):
    """
    A specific instance of Custom Code applied to a Site or Page
    """

    site_id: typing.Optional[str] = pydantic_v1.Field(alias="siteId", default=None)
    """
    The Site id where the custom code was applied
    """

    page_id: typing.Optional[str] = pydantic_v1.Field(alias="pageId", default=None)
    """
    The Page id (if applied at Page-level)
    """

    type: typing.Optional[CustomCodeBlockType] = pydantic_v1.Field(default=None)
    """
    Whether the Custom Code script is applied at the Site-level or Page-level
    """

    scripts: typing.Optional[Scripts] = None
    created_on: typing.Optional[dt.datetime] = pydantic_v1.Field(alias="createdOn", default=None)
    """
    The date the Block was created
    """

    last_updated: typing.Optional[dt.datetime] = pydantic_v1.Field(alias="lastUpdated", default=None)
    """
    The date the Block was most recently updated
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
